{{- if .Values.mysql.enabled -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "flask-mysql-app.mysql.fullname" . }}
  labels:
    app: {{ include "flask-mysql-app.fullname" . }}
    component: mysql
spec:
  serviceName: {{ include "flask-mysql-app.mysql.fullname" . }}
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "flask-mysql-app.fullname" . }}
      component: mysql
  template:
    metadata:
      labels:
        app: {{ include "flask-mysql-app.fullname" . }}
        component: mysql
    spec:
      containers:
        - name: mysql
          image: "{{ .Values.mysql.image.repository }}:{{ .Values.mysql.image.tag }}"
          imagePullPolicy: {{ .Values.mysql.image.pullPolicy }}
          ports:
            - containerPort: 3306
              name: mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "flask-mysql-app.mysql.fullname" . }}
                  key: mysql-root-password
            - name: MYSQL_DATABASE
              value: {{ .Values.mysql.database | quote }}
            - name: MYSQL_USER
              value: {{ .Values.mysql.username | quote }}
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "flask-mysql-app.mysql.fullname" . }}
                  key: mysql-password
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
          resources:
            {{- toYaml .Values.mysql.resources | nindent 12 }}
  {{- if .Values.mysql.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: mysql-persistent-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.mysql.persistence.size }}
  {{- end }}
{{- end }}